#sprite
import pygame
import random



FPS = 60
WIDTH = 500
HEIGHT = 600

BLACK = (0,0,0)
WHITE = (255,255,255)
GREEN = (0,255,0)
RED = (255,0,0)
YELLOW = (255,255,0)
#游戏初始化 and 创建窗口
pygame.init()
screen = pygame.display.set_mode((WIDTH,HEIGHT))
pygame.display.set_caption("太空飞机")
clock = pygame.time.Clock()
,,,
#载入图片
background_img = pygame.image.load(os.jion("img","background.png")).convert()
player_img = pygame.image.load(os.jion("img","player.png")).convert()
#rock_img = pygame.image.load(os.jion("img","rock.png")).convert()
bullet_img = pygame.image.load(os.jion("img","bullet.png")).convert()
rock_imgs = []
for i in range(7):
  rock_imgs.append(pygame.image.load(os.path.join("img",f"rock{i}.png")).convert())
,,,
class Player(pygame.sprite.Sprite):
  def __init__(self):
    pygame.sprite.Sprite.__init__(self)
    self.image = pygame.Surface(50,30))
    #self.image.set_colorkey(BLACK)
    self.image.fill(GREEN)
    self.rect = self.image.get_rect()
    self.radius = 20
    pygame.draw.circle(self.image.RED.self.rect.center,self.radius)
    self.tect.centerx = WIDTH/2
    self.tect.bottom = HIGHT - 10
    self.speedx = 8


    
    
  def update(self):
    key_pressed = pygame.key.get_pressed()
    if key_pressed[pygame.K_d]:
      self.rect.x += self.speedx
    if key_pressed[pygame.K_a]:
      self.rect.x -= self.speedx
      
    if self.rect.right > WIDTH:
      self.rect.right = WIDTH
    if self.rect.left < 0:
      self.rect.right = 0
      
  def shoot(self):
    bullet = Bullet(self.rect.centerx,self.rect.top)
    all_sprites.add(bullet)
    bullets.add(bullet)
      
      
    self.rect.x += 2
    if self.rect.left > WIDTH:
      self.tect.right = 0

class Rock(pygame.sprite.Sprite):
  def __init__(self):
    pygame.sprite.Sprite.__init__(self)
    #self.image_ori = random.choice(rock_imgs)
    self.image_ori = pygame.Surface((50,50))
    self.image_ori.fill(RED)
    self.image_ori.set_colorkey(BLACK)
    self.image = self.image_ori.copy
    
   self.rect = self.image.get_rect()
    self.radius = self.rect.width *0.85/ 2
    #pygame.draw.circle(self.image.RED.self.rect.center,self.radius)
    self.tect.x = random.randrange(0,WIDTH - self.rect.width)
    self.tect.y = random.randrange(-180,-100)
    self.speedy = random.randrange(2,10)
    self.speedx = random.randrange(-3,3)
    self.total_degree = 0
    self.rot_degree = random.randrange(-3,3)
   
   def rotate(self):
    self.total_degree += self.rot_degree
    self.total_degree = self.total_degree % 360
    self.image = pygame.transform.rotate(self.image_ori,self.total_degree)
    center = self.rect.center
    self.rect = self.image.get_rect()
    self.rect.center = center
    
   
   
   def update(self):
    self.rotate()
    self.rect.y +=  self.speedy
    self.rect.x +=  self.speedx
    if self.rect.top > HIGHT or self.rect.left > WIDTH or self.rect.right < 0:
      self.tect.x = random.randrange(0,WIDTH - self.rect.width)
      self.tect.y = random.randrange(-100,-40)
      self.speedy = random.randrange(2,10)
      self.speedx = random.randrange(-3,3)

class Bullt(pygame.sprite.Sprite):
  def __init__(self, x, y):
    pygame.sprite.Sprite.__init__(self)
    #self.image = bullet_img
    self.image = pygame.Sunface((10,10))
    self.image.fill(WHITE)
    self.image.set_colorkey(BLACK)
    self.rect = self.image.get_rect()
    self.tect.x = x
    self.tect.y = y
    self.speedy = -10

   def update(self):
    self.rect.y +=  self.speedy
    if self.rect.bottom > 0:
      self.kill()

all_sprites = pygame.sprite.Group()
rocks = pygame.sprite.Group()
bullets = pygame.sprite.Group()
player = Player()
all_sprites.add(player)
for i in range(8):
  r= Rock()
  all_sprites.add(r)
  rocks.add(r)


#游戏巡回
running =True
while running:
  clock.tick(FPS)
  #取得输入
  for event in pygame.event.get():
    if event.type == pygame.QUIT:
      running = False
    elif event.type == pygame.KEYDOWN:
      if event.key == pygame.K_SPACE:
        player.shoot()
    

      
  
  #更新游戏
  all_sprites.update()
  hits = pygame.sprite.groupcollide(rocks,bullets,True,True)
  for hit in hits:
    r = Rock()
    all_sprites.add(r)
    rocks.add(r)
  
  hits = pygame.sprite.spritecollide(play,rock,False,pygame.sprite.collide_circle)
  if hits:
      running = False
  
  
  
  
  
  #界面显示
  screen.fill(WHITE)
  screen.blit(background_img,(0,0))
  all_sprites.draw(screen)
  pygame.display.update()
pygame.quit()
